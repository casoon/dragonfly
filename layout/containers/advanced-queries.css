/**
 * Advanced Container Queries
 * 
 * Container queries based on aspect ratio, height, and other advanced selectors.
 */

@layer layout.containers.queries {
    /* ================= ASPECT-BASED CONTAINER QUERIES ================= */
    
    /* Container queries based on aspect ratio */
    @supports (aspect-ratio: 1 / 1) {
        .container-aspect-query {
            container-name: aspect;
            container-type: size;
        }
        
        @container aspect (aspect-ratio > 1/1) {
            .aspect\:horizontal-layout { 
                flex-direction: row; 
            }
            
            .aspect\:horizontal-split {
                display: grid;
                gap: var(--grid-gutter);
                grid-template-columns: 1fr 1fr;
            }
        }
        
        @container aspect (aspect-ratio < 1/1) {
            .aspect\:vertical-layout { 
                flex-direction: column; 
            }
            
            .aspect\:vertical-split {
                display: grid;
                gap: var(--grid-gutter);
                grid-template-rows: auto 1fr;
            }
        }
        
        @container aspect (aspect-ratio > 16/9) {
            .aspect\:wide-layout {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            }
        }
    }
    
    /* ================= HEIGHT-BASED CONTAINER QUERIES ================= */
    
    /* Container queries based on container height */
    @supports (container-type: size) {
        .container-height-query {
            container-name: height;
            container-type: size;
        }
        
        @container height (height > 400px) {
            .height\:expanded-content { 
                display: block; 
            }
            
            .height\:large-spacing {
                gap: var(--space-6);
            }
        }
        
        @container height (height <= 400px) {
            .height\:compact-content { 
                display: block; 
            }
            
            .height\:hidden-on-small { 
                display: none; 
            }
            
            .height\:small-spacing {
                gap: var(--space-2);
            }
        }
        
        @container height (height <= 200px) {
            .height\:minimal-content { 
                display: block; 
            }
            
            .height\:minimal-padding {
                padding: var(--space-1);
            }
        }
    }
    
    /* ================= STYLE-BASED CONTAINER QUERIES ================= */
    
    /* Container queries based on CSS properties */
    @supports (container-type: style) {
        .container-style-query {
            container-name: styles;
            container-type: style;
        }
        
        @container style(--theme = 'dark') {
            .theme\:inverted-colors {
                background-color: black;
                color: white;
            }
            
            .theme\:subtle-border {
                border-color: rgb(255 255 255 / 10%);
            }
        }
        
        @container style(--theme = 'light') {
            .theme\:normal-colors {
                background-color: white;
                color: black;
            }
            
            .theme\:subtle-border {
                border-color: rgb(0 0 0 / 10%);
            }
        }
        
        @container style(--density = 'compact') {
            .density\:small-spacing {
                gap: var(--space-2);
                padding: var(--space-2);
            }
            
            .density\:small-text {
                font-size: 90%;
            }
        }
        
        @container style(--density = 'comfortable') {
            .density\:large-spacing {
                gap: var(--space-4);
                padding: var(--space-4);
            }
            
            .density\:normal-text {
                font-size: 100%;
            }
        }
    }
    
    /* ================= COMBINED CONTAINER QUERIES ================= */
    
    /* Container queries with combined conditions */
    @supports (container-type: size) {
        .container-combined-query {
            container-name: combined;
            container-type: size;
        }
        
        @container combined ((width > 500px) and (height > 300px)) {
            .combined\:large-grid {
                display: grid;
                grid-template-columns: repeat(3, 1fr);
            }
        }
        
        @container combined ((width <= 500px) or (height <= 300px)) {
            .combined\:small-grid {
                display: grid;
                grid-template-columns: 1fr;
            }
        }
    }
} 