/*
 * Forms Module
 *
 * Comprehensive form elements and controls for user input and interaction.
 * This module combines all form-related components from the elements directory.
 */

/**
 * Form Elements Collection
 * 
 * This file contains all form-related components:
 * - Buttons (interactive form controls)
 * - Input fields (text, email, password, etc.)
 * - Textarea (multi-line text input)
 * - Select dropdowns (single and multiple selection)
 * - Checkboxes (multiple selection)
 * - Radio buttons (single selection from group)
 * - Switches (toggle controls)
 * - Sliders (range input controls)
 * 
 * @layer components.forms
 * 
 * Accessibility Features:
 * - Semantic HTML elements as foundation
 * - Proper focus management and keyboard navigation
 * - ARIA attributes where needed
 * - High contrast focus indicators
 * - Screen reader friendly labels and descriptions
 */

/* =================== ANIMATIONS =================== */

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* =================== BUTTONS =================== */

@layer components {
  /* Base Button Style */
  .button {
    align-items: center;
    border: none;
    border-radius: var(--radius-md, 0.5rem);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--font-size-sm, 0.875rem);
    font-weight: var(--font-weight-medium, 500);
    justify-content: center;
    line-height: 1.25;
    padding-block: var(--space-2, 0.5rem);
    padding-inline: var(--space-4, 1rem);
    position: relative;
    text-decoration: none;
    transition: background-color var(--transition-duration-fast, 150ms) var(--transition-timing-ease, cubic-bezier(0.4, 0, 0.2, 1));
  }

  /* Button Variants */
  .button--primary {
    background-color: var(--color-primary, #06c);
    color: white;
  }
  
  .button--primary:hover {
    background-color: var(--color-primary-hover, #05a);
  }

  .button--secondary {
    background-color: var(--color-secondary);
    color: white;
  }
  
  .button--secondary:hover {
    background-color: var(--color-secondary-hover);
  }

  .button--tertiary {
    background-color: transparent;
    border: 1px solid var(--color-border);
    color: var(--color-text);
  }
  
  .button--tertiary:hover {
    background-color: var(--color-background-alt);
  }

  .button--success {
    background-color: var(--color-success);
    color: white;
  }
  
  .button--success:hover {
    background-color: var(--color-success-hover);
  }

  .button--warning {
    background-color: var(--color-warning);
    color: var(--color-text);
  }
  
  .button--warning:hover {
    background-color: var(--color-warning-hover);
  }

  .button--danger {
    background-color: var(--color-error);
    color: white;
  }
  
  .button--danger:hover {
    background-color: var(--color-error-hover);
  }

  .button--info {
    background-color: var(--color-info);
    color: white;
  }
  
  .button--info:hover {
    background-color: var(--color-info-hover);
  }
  
  .button--link {
    background-color: transparent;
    color: var(--color-primary);
    padding: 0;
    text-decoration: underline;
  }
  
  .button--link:hover {
    color: var(--color-primary-hover);
    text-decoration: none;
  }

  /* Button Sizes */
  .button--xs {
    font-size: var(--font-size-xs);
    padding-block: var(--space-1);
    padding-inline: var(--space-2);
  }

  .button--sm {
    font-size: var(--font-size-sm);
    padding-block: var(--space-1);
    padding-inline: var(--space-3);
  }
  
  .button--md {
    font-size: var(--font-size-base);
    padding-block: var(--space-2);
    padding-inline: var(--space-4);
  }

  .button--lg {
    font-size: var(--font-size-lg);
    padding-block: var(--space-3);
    padding-inline: var(--space-6);
  }
  
  .button--xl {
    font-size: var(--font-size-xl);
    padding-block: var(--space-4);
    padding-inline: var(--space-8);
  }

  /* Button States */
  button:disabled,
  .button:disabled {
    cursor: not-allowed;
    opacity: 50%;
  }

  .button--loading {
    color: transparent;
    pointer-events: none;
  }

  .button--with-icon {
    gap: var(--space-2);
  }

  .button--with-icon .icon {
    flex-shrink: 0;
    height: 1em;
    width: 1em;
  }

  .button--icon-only {
    aspect-ratio: 1;
    padding: var(--space-2);
  }

  .button--icon-only .icon {
    height: 1.25em;
    width: 1.25em;
  }

  .button--loading::after {
    animation: spin 1s linear infinite;
    border: 2px solid transparent;
    border-radius: 50%;
    border-top-color: currentColor;
    content: "";
    height: 1em;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 1em;
  }
}

/* =================== INPUT FIELDS =================== */

@layer components {
  .input {
    background-color: var(--color-white);
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    color: var(--color-gray-900);
    display: block;
    font-size: var(--font-size-base);
    padding: var(--space-2) var(--space-3);
    transition: border-color var(--transition-fast), background-color var(--transition-fast);
    width: 100%;

    &:focus {
      border-color: var(--color-primary);
      box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-primary) 50%, transparent);
      outline: none;
    }

    &.invalid {
      background-color: color-mix(in srgb, var(--color-error) 5%, white);
      border-color: var(--color-error);
    }

    &:disabled {
      background-color: var(--color-gray-100);
      color: var(--color-gray-500);
      cursor: not-allowed;
    }

    &:read-only {
      background-color: var(--color-gray-50);
    }

    /* Input Variants */
    &.primary {
      border-color: var(--color-primary);
    }

    &.success {
      border-color: var(--color-success);
    }

    &.warning {
      border-color: var(--color-warning);
    }

    &.danger {
      border-color: var(--color-danger);
    }

    /* Input Sizes */
    &.sm {
      font-size: var(--font-size-sm);
      padding: var(--space-1) var(--space-2);
    }

    &.lg {
      font-size: var(--font-size-lg);
      padding: var(--space-3) var(--space-4);
    }
  }

  /* Input with Icon */
  .input-wrapper {
    align-items: center;
    display: flex;
    position: relative;

    .input {
      padding-left: var(--space-8);
    }

    .input-icon {
      color: var(--color-gray-400);
      left: var(--space-3);
      pointer-events: none;
      position: absolute;
    }
  }
}

/* =================== TEXTAREA =================== */

@layer components {
  .textarea {
    background-color: var(--color-white);
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    color: var(--color-gray-900);
    font-size: var(--font-size-base);
    min-height: 6rem;
    padding: var(--space-3);
    resize: vertical;
    transition: border-color var(--transition-fast), box-shadow var(--transition-fast);
    width: 100%;
    
    &:focus {
      border-color: var(--color-primary);
      box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-primary) 50%, transparent);
      outline: none;
    }
    
    &:disabled {
      background-color: var(--color-gray-100);
      color: var(--color-gray-500);
      cursor: not-allowed;
      opacity: 70%;
    }
    
    /* Textarea Sizes */
    &.sm {
      font-size: var(--font-size-sm);
      min-height: 4rem;
      padding: var(--space-2);
    }
    
    &.lg {
      font-size: var(--font-size-lg);
      min-height: 8rem;
      padding: var(--space-4);
    }
    
    /* Textarea States */
    &.error {
      background-color: color-mix(in srgb, var(--color-error) 3%, var(--color-white));
      border-color: var(--color-error);
      
      &:focus {
        box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-error) 30%, transparent);
      }
    }
    
    &.success {
      background-color: color-mix(in srgb, var(--color-success) 3%, var(--color-white));
      border-color: var(--color-success);
      
      &:focus {
        box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-success) 30%, transparent);
      }
    }
    
    &.readonly {
      background-color: var(--color-gray-50);
      cursor: default;
    }
    
    &.auto-resize {
      overflow-y: hidden;
    }
  }
  
  /* Textarea with Counter */
  .textarea-container {
    position: relative;
    width: 100%;
    
    .counter {
      bottom: var(--space-2);
      color: var(--color-gray-500);
      font-size: var(--font-size-xs);
      pointer-events: none;
      position: absolute;
      right: var(--space-3);
    }
    
    .textarea {
      padding-bottom: calc(var(--space-3) + 1.5rem);
    }
  }
}

/* =================== SELECT DROPDOWNS =================== */

@layer components {
  .select {
    appearance: none;
    background-color: var(--color-white);
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 20 20' fill='none' stroke='%23666' stroke-width='2' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6 8l4 4 4-4'/%3E%3C/svg%3E");
    background-position: right var(--space-3) center;
    background-repeat: no-repeat;
    background-size: 1rem;
    border: 1px solid var(--color-gray-300);
    border-radius: var(--radius-md);
    color: var(--color-gray-900);
    cursor: pointer;
    display: block;
    font-size: var(--font-size-base);
    padding: var(--space-2) var(--space-3);
    transition: border-color var(--transition-fast), box-shadow var(--transition-fast);
    width: 100%;
    
    &:focus {
      border-color: var(--color-primary);
      box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-primary) 50%, transparent);
      outline: none;
    }
    
    &:disabled {
      background-color: var(--color-gray-100);
      color: var(--color-gray-500);
      cursor: not-allowed;
      opacity: 70%;
    }
    
    /* Select Sizes */
    &.sm {
      background-position: right var(--space-2) center;
      background-size: 0.875rem;
      font-size: var(--font-size-sm);
      padding: var(--space-1) var(--space-2);
    }
    
    &.lg {
      background-position: right var(--space-4) center;
      background-size: 1.25rem;
      font-size: var(--font-size-lg);
      padding: var(--space-3) var(--space-4);
    }
    
    /* Select States */
    &.error {
      background-color: color-mix(in srgb, var(--color-error) 3%, var(--color-white));
      border-color: var(--color-error);
      
      &:focus {
        box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-error) 30%, transparent);
      }
    }
    
    &.success {
      background-color: color-mix(in srgb, var(--color-success) 3%, var(--color-white));
      border-color: var(--color-success);
      
      &:focus {
        box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-success) 30%, transparent);
      }
    }
    
    /* Multiple Selection */
    &[multiple] {
      background-image: none;
      padding: var(--space-1);
      
      option {
        border-radius: var(--radius-sm);
        padding: var(--space-1) var(--space-2);
        
        &:checked {
          background-color: color-mix(in srgb, var(--color-primary) 15%, transparent);
        }
      }
    }
    
    /* Option Groups */
    optgroup {
      color: var(--color-gray-700);
      font-weight: var(--font-weight-medium);
    }
  }
}

/* =================== CHECKBOXES =================== */

@layer elements {
  .checkbox {
    align-items: center;
    cursor: pointer;
    display: inline-flex;
    font-size: var(--text-sm);
    gap: var(--space-2);
    position: relative;
  }
  
  .checkbox .input {
    appearance: none;
    background-color: white;
    border: 1px solid var(--color-neutral-400);
    border-radius: var(--radius-sm);
    cursor: pointer;
    height: 1rem;
    position: relative;
    transition: all 0.2s;
    width: 1rem;
  }
  
  .checkbox .input:checked {
    background-color: var(--color-primary-500);
    border-color: var(--color-primary-500);
  }
  
  .checkbox .input:checked::after {
    border: solid white;
    border-width: 0 2px 2px 0;
    content: "";
    height: 6px;
    left: 4px;
    position: absolute;
    top: 1px;
    transform: rotate(45deg);
    width: 3px;
  }
  
  .checkbox .label {
    color: var(--color-text-700);
    font-size: var(--text-sm);
  }
  
  .checkbox .input:focus-visible {
    outline: 2px solid var(--color-primary-300);
    outline-offset: 2px;
  }
  
  .checkbox .input:hover:not(:disabled) {
    border-color: var(--color-primary-500);
  }
  
  .checkbox .input:disabled {
    background-color: var(--color-neutral-100);
    border-color: var(--color-neutral-300);
    cursor: not-allowed;
    opacity: 50%;
  }
  
  .checkbox .input:disabled ~ .checkbox .label {
    color: var(--color-text-400);
    cursor: not-allowed;
  }
  
  /* Checkbox Sizes */
  .checkbox--sm .input {
    height: 0.875rem;
    width: 0.875rem;
  }
  
  .checkbox--sm .input:checked::after {
    height: 5px;
    left: 3px;
    top: 1px;
    width: 2px;
  }
  
  .checkbox--sm .label {
    font-size: var(--text-xs);
  }
  
  .checkbox--lg .input {
    height: 1.25rem;
    width: 1.25rem;
  }
  
  .checkbox--lg .input:checked::after {
    height: 8px;
    left: 5px;
    top: 2px;
    width: 4px;
  }
  
  .checkbox--lg .label {
    font-size: var(--text-base);
  }
  
  /* Checkbox Groups */
  .checkbox-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }
  
  .checkbox-group--horizontal {
    flex-flow: row wrap;
    gap: var(--space-4);
  }
}

/* =================== RADIO BUTTONS =================== */

@layer components {
  .radio {
    align-items: center;
    cursor: pointer;
    display: inline-flex;
    font-size: var(--font-size-sm);
    gap: var(--space-2);
    
    input[type="radio"] {
      appearance: none;
      background-color: var(--color-white);
      border: 2px solid var(--color-gray-400);
      border-radius: 9999px;
      height: 1rem;
      position: relative;
      transition: all var(--transition-fast);
      width: 1rem;
      
      &:checked {
        background-color: var(--color-primary);
        border-color: var(--color-primary);
        
        &::after {
          background-color: white;
          border-radius: 9999px;
          content: "";
          height: 0.375rem;
          left: 50%;
          position: absolute;
          top: 50%;
          transform: translate(-50%, -50%);
          width: 0.375rem;
        }
      }
      
      &:focus-visible {
        outline: 2px solid var(--color-primary);
        outline-offset: 2px;
      }
      
      &:disabled {
        background-color: var(--color-gray-100);
        border-color: var(--color-gray-300);
        cursor: not-allowed;
        
        & ~ .label {
          color: var(--color-gray-400);
          cursor: not-allowed;
        }
      }
    }
    
    /* Radio Sizes */
    &.sm {
      font-size: var(--font-size-xs);
      
      input[type="radio"] {
        height: 0.875rem;
        width: 0.875rem;
      }
    }
    
    &.lg {
      font-size: var(--font-size-base);
      
      input[type="radio"] {
        height: 1.25rem;
        width: 1.25rem;
        
        &:checked::after {
          height: 0.5rem;
          width: 0.5rem;
        }
      }
    }
  }
  
  .radio-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
    
    &.horizontal {
      align-items: center;
      flex-flow: row wrap;
    }
  }
}

/* =================== SWITCHES =================== */

@layer elements {
  .switch {
    align-items: center;
    cursor: pointer;
    display: inline-flex;
    gap: var(--space-2);
    position: relative;
  }
  
  .switch .input {
    height: 0;
    opacity: 0%;
    position: absolute;
    width: 0;
  }
  
  .switch .track {
    background-color: var(--color-neutral-300);
    border-radius: var(--radius-full);
    display: inline-block;
    height: var(--switch-height, 1.25rem);
    position: relative;
    transition: background-color 0.2s;
    width: var(--switch-width, 2.5rem);
  }
  
  .switch .thumb {
    background-color: white;
    border-radius: 50%;
    box-shadow: 0 1px 2px rgb(0 0 0 / 10%);
    height: calc(var(--switch-height) * 0.8);
    left: calc(var(--switch-height) * 0.1);
    position: absolute;
    top: calc(var(--switch-height) * 0.1);
    transition: transform 0.2s;
    width: calc(var(--switch-height) * 0.8);
  }
  
  .switch .label {
    color: var(--color-text-700);
    font-size: var(--text-sm);
  }
  
  .switch .input:checked + .switch .track {
    background-color: var(--color-primary-500);
  }
  
  .switch .input:checked + .switch .track .switch .thumb {
    transform: translateX(calc(var(--switch-width) - var(--switch-height)));
  }
  
  .switch .input:focus-visible + .switch .track {
    outline: 2px solid var(--color-primary-500);
    outline-offset: 2px;
  }
  
  .switch .input:disabled + .switch .track {
    background-color: var(--color-neutral-200);
    cursor: not-allowed;
    opacity: 70%;
  }
  
  .switch .input:disabled + .switch .track .switch .thumb {
    background-color: var(--color-neutral-400);
  }
  
  .switch .input:disabled ~ .switch .label {
    color: var(--color-text-400);
    cursor: not-allowed;
  }
  
  /* Switch Sizes */
  .switch--sm {
    --switch-width: 2rem;
    --switch-height: 1rem;
  }
  
  .switch--sm .label {
    font-size: var(--text-xs);
  }
  
  .switch--md {
    --switch-width: 2.5rem;
    --switch-height: 1.25rem;
  }
  
  .switch--lg {
    --switch-width: 3.5rem;
    --switch-height: 1.75rem;
  }
  
  .switch--lg .label {
    font-size: var(--text-base);
  }
  
  /* Switch Color Variants */
  .switch--primary .input:checked + .switch .track {
    background-color: var(--color-primary-500);
  }
  
  .switch--secondary .input:checked + .switch .track {
    background-color: var(--color-secondary-500);
  }
  
  .switch--success .input:checked + .switch .track {
    background-color: var(--color-success-500);
  }
  
  .switch--warning .input:checked + .switch .track {
    background-color: var(--color-warning-500);
  }
  
  .switch--danger .input:checked + .switch .track {
    background-color: var(--color-error-500);
  }
}

/* =================== SLIDERS =================== */

@layer elements {
  .slider {
    appearance: none;
    background-color: var(--color-neutral-200);
    border-radius: var(--radius-full);
    cursor: pointer;
    height: 0.25rem;
    margin: var(--space-2) 0;
    width: 100%;
  }
  
  /* Slider Thumb - WebKit */
  .slider::-webkit-slider-thumb {
    appearance: none;
    background-color: var(--color-primary-500);
    border-radius: 50%;
    box-shadow: 0 1px 3px rgb(0 0 0 / 10%);
    cursor: pointer;
    height: 1rem;
    transition: transform 0.2s, background-color 0.2s;
    width: 1rem;
  }
  
  /* Slider Thumb - Firefox */
  .slider::-moz-range-thumb {
    background-color: var(--color-primary-500);
    border: none;
    border-radius: 50%;
    box-shadow: 0 1px 3px rgb(0 0 0 / 10%);
    cursor: pointer;
    height: 1rem;
    transition: transform 0.2s, background-color 0.2s;
    width: 1rem;
  }
  
  /* Slider Hover */
  .slider:hover::-webkit-slider-thumb {
    transform: scale(1.1);
  }
  
  .slider:hover::-moz-range-thumb {
    transform: scale(1.1);
  }
  
  /* Slider Focus */
  .slider:focus {
    outline: none;
  }
  
  .slider:focus::-webkit-slider-thumb {
    box-shadow: 0 0 0 3px var(--color-primary-200);
  }
  
  .slider:focus::-moz-range-thumb {
    box-shadow: 0 0 0 3px var(--color-primary-200);
  }
  
  /* Slider Sizes */
  .slider--sm {
    height: 0.125rem;
  }
  
  .slider--sm::-webkit-slider-thumb {
    height: 0.75rem;
    width: 0.75rem;
  }
  
  .slider--sm::-moz-range-thumb {
    height: 0.75rem;
    width: 0.75rem;
  }
  
  .slider--lg {
    height: 0.375rem;
  }
  
  .slider--lg::-webkit-slider-thumb {
    height: 1.25rem;
    width: 1.25rem;
  }
  
  .slider--lg::-moz-range-thumb {
    height: 1.25rem;
    width: 1.25rem;
  }
  
  /* Slider Color Variants */
  .slider--primary::-webkit-slider-thumb {
    background-color: var(--color-primary-500);
  }
  
  .slider--primary::-moz-range-thumb {
    background-color: var(--color-primary-500);
  }
  
  .slider--secondary::-webkit-slider-thumb {
    background-color: var(--color-secondary-500);
  }
  
  .slider--secondary::-moz-range-thumb {
    background-color: var(--color-secondary-500);
  }
  
  .slider--success::-webkit-slider-thumb {
    background-color: var(--color-success-500);
  }
  
  .slider--success::-moz-range-thumb {
    background-color: var(--color-success-500);
  }
  
  .slider--danger::-webkit-slider-thumb {
    background-color: var(--color-error-500);
  }
  
  .slider--danger::-moz-range-thumb {
    background-color: var(--color-error-500);
  }
  
  .slider--warning::-webkit-slider-thumb {
    background-color: var(--color-warning-500);
  }
  
  .slider--warning::-moz-range-thumb {
    background-color: var(--color-warning-500);
  }
  
  /* Slider Container */
  .slider-container {
    display: flex;
    flex-direction: column;
    margin: var(--space-3) 0;
    width: 100%;
  }
  
  .slider-container .labels {
    color: var(--color-text-500);
    display: flex;
    font-size: var(--text-xs);
    justify-content: space-between;
    margin-top: var(--space-1);
  }
  
  .slider-container .value {
    align-self: flex-end;
    color: var(--color-text-700);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    margin-top: var(--space-1);
  }
  
  /* Range Slider (dual thumbs) */
  .slider-range {
    height: 2rem;
    margin: var(--space-3) 0;
    position: relative;
    width: 100%;
  }
  
  .slider-range .slider {
    background: none;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 1;
  }
  
  .slider-range .slider::-webkit-slider-thumb {
    pointer-events: auto;
  }
  
  .slider-range .slider::-moz-range-thumb {
    pointer-events: auto;
  }
  
  .slider-range .fill {
    background-color: var(--color-primary-500);
    border-radius: var(--radius-full);
    height: 0.25rem;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
} 